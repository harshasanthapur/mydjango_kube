pipeline {
    agent any
    
    environment {
        // Set environment variables as needed
        DOCKER_REGISTRY = 'harshasanthapur123'
        DOCKER_IMAGE_NAME = 'mydjangoapp'
        BUILD_NUMBER = 'latest'
        KUBE_NAMESPACE = 'default'
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build Docker image
                    docker.build("${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}")
                }
            }
        }

        stage('Run Tests') {
            steps {
                script {
                    // Run automated tests inside a Docker container
                    docker.image("${DOCKER_REGISTRY}/${DOCKER_IMAGE_NAME}:${BUILD_NUMBER}")
                        .inside("--network=host") {
                            sh 'python manage.py test'
                        }
                }
            }
        }

        stage('Deploy to kubernetes') {
            steps {
                script {
                    // Apply Kubernetes configuration
                    sh "kubectl config use-context minikube"
                    sh "kubectl apply -f django_deployment.yaml --namespace=${KUBE_NAMESPACE}"
                    sh "kubectl apply -f django_service.yaml --namespace=${KUBE_NAMESPACE}"
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
